Exercise 1.1: Getting Started with Python 
Learning Goals

	•	Summarize the uses and benefits of Python for web development
	•	Prepare your developer environment for programming with Python

Reflection Questions

	•	In your own words, what is the difference between frontend and backend web development? If you were hired to work on backend programming for a web application, what kinds of operations would you be working on?
	Frontend is about how a website or app looks and feels. It focuses on the design and how users interact with it. Backend is all the behind-the-scenes stuff, like storing data and making sure everything works properly. As a backend developer, I’d work on things like managing databases, setting up how data flows, and connecting it all to the frontend.

	•	Imagine you’re working as a full-stack developer in the near future. Your team is asking for your advice on whether to use JavaScript or Python for a project, and you think Python would be the better choice. How would you explain the similarities and differences between the two languages to your team? Drawing from what you learned in this Exercise, what reasons would you give to convince your team that Python is the better option? 
(Hint: refer to the Exercise section “The Benefits of Developing with Python”)
	Both are great, but Python is easier to learn and work with, especially for backend projects. It comes with tools that make coding faster, and it’s really good for things like working with data or building backend systems. If we want to get the project done efficiently and focus on the backend, Python is a better choice.
	•	Now that you’ve had an introduction to Python, write down 3 goals you have for yourself and your learning during this Achievement. You can reflect on the following questions if it helps you. What do you want to learn about Python? What do you want to get out of this Achievement? Where or what do you see yourself working on after you complete this Achievement?
	1. Get better at writing Python code and understand when to use it.
    2. Learn how Python compares to JavaScript and when to choose one over the other.
    3. Build skills to create apps that are easy to use and well-designed.
	My goal is to be a web developer who can work confidently in both Python and JavaScript, delivering applications that are functional, user-friendly, and good looking.